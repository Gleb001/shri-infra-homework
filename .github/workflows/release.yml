name: Release

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  lint_and_test:
    uses: ./.github/workflows/lint_and_test.yml

  release:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: ${{ needs.lint_and_test.result == 'success' }}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure Git
      run: git config user.name "${{ github.actor }}"

    - name: отводит от `main` релизуню ветку `releases/<версия_релиза>`
      run: |
        git checkout main
        git pull origin main
        git checkout -b "releases/${{ github.run_number }}"
        git push origin "releases/${{ github.run_number }}"

    - name: собирает docker-образ с двумя тегами
      run: |
        docker build -t cr.yandex/${{ secrest.ID_REGISTRY }}/app:${{ github.run_number }} .
        docker tag cr.yandex/${{ secrest.ID_REGISTRY }}/app:${{ github.run_number }} cr.yandex/${{ secrest.ID_REGISTRY }}/app:${{ github.run_number }}_latest

    - name: загружает docker-образ в Container Registry 
      run: |
        docker push cr.yandex/${{ secrest.ID_REGISTRY }}/app:${{ github.run_number }}
        docker push cr.yandex/${{ secrest.ID_REGISTRY }}/app:${{ github.run_number }}_latest

    - name: создаёт тег, с номером текущей версии, который указывает на последний коммит в главной ветке
      run: |
        git tag -a "v${{ github.run_number }}" -m "Release version ${{ github.run_number }}"
        git push origin "v${{ github.run_number }}"

    - name: создание Issue, которое содержит всю важную информацию
      uses: actions/github-script@v7
      env:
        ID_REGISTRY: ${{ secrets.ID_REGISTRY }}
        COMMIT_LIST: "123123123123"
      with:
        github-token: ${{ secrets.ACCESS_TOKEN }}
      run: node createIssue.js
          
